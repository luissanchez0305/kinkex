<?php
    $tabLocation    = $this->getOption('tabs_location', 'left');
    $tabsWidth      = $this->getOption('tabs_width', 150);
    $imgWidth       = $width - $tabsWidth;

    $imgBgsAnimationList = $this->getOption('image_animation_list', array('fade', 'wave', 'crash', 'curtain', 'zipper', 'fountain', 'cascade', 'dribble', 'checker', 'enterTheDragon'));
    $imgBgsAnimationType = $this->getOption('image_animation_type', 'cycle');

    $obj = json_decode($imgBgsAnimationList);
    if (is_array($obj) && count($obj) < 2) $imgBgsAnimationType = 'cycle';
?>
<script type="text/javascript">
    jqAdvSlider(document).ready(function(){
        jqAdvSlider('#preFeature_<?php echo $id; ?>').siteFeature({
            // this is the ID given to the container div generated by siteFeature
            outputElementId: 'siteFeature',
            // creates the naming convention for the TextBox (ie: txtBoxContainer)
            txtBoxIdPrefix: 'txtBox',
            // creates the naming convention for the ImageBackgounds (ie: imgBgContainer)
            imgBgIdPrefix: 'imgBg',
            // creates the naming convention for the Tabs (ie: tabContainer)
            tabIdPrefix: 'tab',
            // identifies the Title Text for manipulation
            titleText: 'h3',
            // sets the generated Container's width
            containerWidth: '<?php echo $width; ?>px',
            // sets the generated Container's height
            containerHeight: '<?php echo $height; ?>px',
            // sets the width of the ImageBox/TextBox section. When subtracted from the Container's width - yields the Tabs width.
            imgWidth: '<?php echo $imgWidth; ?>px',
            // sets position of the Tabs (relative to the Image Box)
            tabsLocation: '<?php echo $tabLocation; ?>',
            // relative path for Image used as Highlighted Tab background (ie: the arrow)
            tabBgImg: '<?php echo $this->getSkinUrl('images/webandpeople/advancedslider/arrow-' . $tabLocation . '.png')?>',
            // relative path for Image used by IE6 (to prevent PNG alpha issues). Leave blank ('') or set to null to uses the same image (and to teach IE6 users a lesson).
            tabBgImgIE6: '<?php echo $this->getSkinUrl('images/webandpeople/advancedslider/arrow-' . $tabLocation . '.gif')?>',
            // sets the event that activates the tab change: 'click', 'hover'
            tabControl: 'click',
            // sets the number of tabs before the overflow (int / null)
            tabLock: <?php echo $this->getOption('tabs_lock_count', 3); ?>,
            // sets the tab to be displayed onLoad
            startTab: 1,
            // sets the width of the Vertical TextBox
            txtBoxWidth: '<?php echo $this->getOption('textbox_vertical_width', 185); ?>px',
            // sets the height of the Horizontal TextBox
            txtBoxHorizontalHeight: '<?php echo $this->getOption('textbox_horizontal_height', 90); ?>px',
            // sets the opcaity of the TextBox background (color set in CSS - default is #000000)
            txtBoxOpacity: <?php echo $this->getOption('textbox_opacity', 0.8); ?>,
            // determines if the the Highlighted Tab is a link to said Tab's default destination (the original href)
            activeTabIsLink: true,
            // determines if the current ImageBackground and TextBox are links to the Tab's default destination (the original href)
            activeWindowIsLink: true,
            // determines if the Tab, ImageBackground, and TextBox animate In on page load or simply appear
            animateInOnLoad: true,
            // sets animation In type for vertical TextBoxes: 'blink', 'fade', 'slideUp', 'slideDown', 'slideLeft', 'slideRight'
            txtBoxAnimateInType: '<?php echo $this->getOption('textbox_vertical_animation_in', 'slideLeft'); ?>',
            // sets animation Out type for vertical TextBoxes: 'blink', 'fade', 'slideUp', 'slideDown', 'slideLeft', 'slideRight'
            txtBoxAnimateOutType: '<?php echo $this->getOption('textbox_vertical_animation_out', 'slideRight'); ?>',
            // allows horizontal txtBoxes to animate in/out differently
            txtBoxAnimateHorzAlt: true,
            // sets animation In type for horizontal TextBoxes: 'blink', 'fade', 'slideUp', 'slideDown', 'slideLeft', 'slideRight'
            txtBoxAnimateInHorzType: '<?php echo $this->getOption('textbox_horizontal_animation_in', 'slideUp'); ?>',
            // sets animation Out type for horizontal TextBoxes: 'blink', 'fade', 'slideUp', 'slideDown', 'slideLeft', 'slideRight'
            txtBoxAnimateOutHorzType: '<?php echo $this->getOption('textbox_horizontal_animation_out', 'slideDown'); ?>',
            // sets the duration for TextBox In animations (in milliseconds)
            txtBoxAnimateInDuration: <?php echo $this->getOption('textbox_animation_duration_in', 500); ?>,
            // sets the duration for TextBox Out animations (in milliseconds)
            txtBoxAnimateOutDuration: <?php echo $this->getOption('textbox_animation_duration_out', 500); ?>,
            // sets the duration for the pause between the current TextBox animating Out and the new TextBox animating In ('0' for no delay) (in milliseconds)
            txtBoxPauseBetweenInOut: <?php echo $this->getOption('textbox_animation_inout_pause', 1000); ?>,
            // sets the number of columns used in the bgImg transitions
            cols: 10,
            // sets the number of rows used in the bgImg transitions
            rows: 5,
            // sets the duration for ImageBackground In animations (in milliseconds)
            imgBgsAnimationDuration: <?php echo $this->getOption('image_animation_duration_in', 500); ?>,
            // sets the duration for ImageBackground Out animations (in milliseconds)
            imgBgsAnimateOutDuration: <?php echo $this->getOption('image_animation_duration_out', 500); ?>,
            // sets animation type: 'fade', 'wave', 'crash', 'curtain', 'zipper', 'fountain', 'cascade', 'dribble', 'checker', 'enterTheDragon', 'random', 'cycle'
            imgBgsAnimationType: '<?php echo $imgBgsAnimationType; ?>',
            imgBgsAnimationList: <?php echo $imgBgsAnimationList; ?>,
            // sets the start position of the transition: 'left', 'right', 'random'
            imgBgAnimationDirection: '<?php echo $this->getOption('image_animation_direction', 'random'); ?>',
            // sets the duration for Tab In animations (in milliseconds)
            tabsAnimateInDuration: <?php echo $this->getOption('tabs_animation_duration_in', 100); ?>,
            // sets the relative pixel width difference to be animated (to reveal the arrow)
            tabsAnimateWidth: '+=<?php echo $this->getOption('tabs_animated_width', 20); ?>',
            // determines if the tabs cycle automatically
            autoPlay: <?php echo $this->getOption('auto_play_enabled', 1); ?>,
            // sets the autoPlay interval
            autoPlayInterval: <?php echo $this->getOption('auto_play_interval', 4000); ?>,
            // pause the autoPlay when hovering on siteFeature
            pauseOnHover: <?php echo $this->getOption('pause_on_hover', 1); ?>,
            // adds a function to the end of every animation to remove IE filters (re-enables transparency)(boolean - true/false)
            ieEnableFilters: false,
            // creates a userdefined Callback (with access to all plugin Options) that fires after everything has been written to the DOM but before events are bound.
            endCreateFunction: null
        });
    });
</script>
<?php if (!$this->getOption('textbox_display', 1)) : ?>
<style>
#siteFeature #txtBoxContainer div {
   display: none;
}
#siteFeature #txtBoxContainer div span {
   background: none repeat scroll 0 0 transparent;
}
</style>
<?php endif; ?>
<div id="preFeature_<?php echo $id; ?>">
    <?php foreach ($list as $item) : ?>
        <?php if ($item['isImage']) : ?>
            <?php $imageUrl = Mage::helper('advancedslider')->getResizedImageUrl($item['image'], $imgWidth, $height); ?>
            <div>
                <img title="<?php echo $this->getSlideOption($item, 'short_description', ''); ?>" src="<?php echo $imageUrl; ?>" alt="<?php echo $imageUrl; ?>" width="<?php echo $imgWidth; ?>" height="<?php echo $height; ?>"/>
                <h3><?php echo $item['title']; ?></h3>
                <p><?php echo $this->getSlideOption($item, 'description', ''); ?></p>
                <?php if ($item['link'] && $item['linkTarget']) : ?>
                    <a class="slide_link" href="<?php echo $item['link']; ?>" target="<?php echo $item['linkTarget']; ?>">
                        <?php echo $this->getSlideOption($item, 'lint_title', $this->__('Details')); ?>
                    </a>
                <?php else: ?>
                    <a style="display:none;" href="javascript:;"></a>
                <?php endif; ?>
            </div>
        <?php endif; ?>
    <?php endforeach; ?>
</div>
