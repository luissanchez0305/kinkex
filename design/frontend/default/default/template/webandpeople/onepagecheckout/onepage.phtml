<div class="page-title">
    <h1><?php echo $this->__('Checkout') ?></h1>
 

</div>

<script type="text/javascript">countryRegions = <?php echo $this->helper('directory')->getRegionJson() ?></script>

<?php if (!$this->isCustomerLoggedIn()): ?>
<div id="login-link"><a href="javascript:;" onclick="popupLogin();return false;"><?php echo $this->__('Already registered? Please login here') ?></a></div>
<?php endif; ?>

<?php echo $this->getChildHtml('layout'); ?>

<?php if (Mage::getStoreConfig('onepage_checkout/general/enable_discount')) : ?>
<div class="checkout-agreements discount" id="discount-coupon-form">
    <?php echo $this->getChildHtml('coupon') ?>
</div>
<?php endif; ?>

<script type="text/javascript">
//<![CDATA[
    var checkout = new Checkout({
        updateAllInfoUrl: '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>',
        saveMethod: '<?php echo $this->getUrl('checkout/onepage/saveMethod') ?>',
        failure: '<?php echo $this->getUrl('checkout/cart') ?>'}
    );

    if ($('billing-address-select')) $('billing-address-select').observe('change', bindUpdateBillingMethods);
    if ($('billing:country_id')) $('billing:country_id').observe('change', bindUpdateBillingMethods);
    if ($('billing:region_id')) $('billing:region_id').observe('change', bindUpdateBillingMethods);
    if ($('billing:city')) $('billing:city').observe('change', bindUpdateBillingMethods);
    if ($('billing:postcode')) $('billing:postcode').observe('change', bindUpdateBillingMethods);
    if ($('billing:use_for_shipping')) $('billing:use_for_shipping').observe('click', bindUpdateShippingMethods);

    if ($('shipping-address-select')) $('shipping-address-select').observe('change', bindUpdateShippingMethods);
    if ($('shipping:country_id')) $('shipping:country_id').observe('change', bindUpdateShippingMethods);
    if ($('shipping:region_id')) $('shipping:region_id').observe('change', bindUpdateShippingMethods);
    if ($('shipping:city')) $('shipping:city').observe('change', bindUpdateShippingMethods);
    if ($('shipping:postcode')) $('shipping:postcode').observe('change', bindUpdateShippingMethods);
    if ($('shipping:same_as_billing')) $('shipping:same_as_billing').observe('click', bindUpdateShippingMethods);

    var winLogin = null;
    var loginHtml = <?php echo Mage::helper('core')->jsonEncode($this->getChildHtml('login')); ?>;

    function popupLogin()
    {
        if (!winLogin)
        {
            winLogin = new OnePageCheckoutPopup({
                id: 'popup-login-form',
                html: loginHtml,
                title: '<?php echo $this->__('Customer Login') ?>',
                width: 335
            });
        }
        else
        {
            winLogin.open();
        }
    }

    function includingShipping(getShippingCode)
    {
        if (typeof shippingMe != 'undefined')
        {
            var newPrice = shippingMe[getShippingCode];
            var quoteBaseGrandTotal = 0;
            if (typeof lastPrice == 'undefined') {
                lastPrice = newPrice;
                quoteBaseGrandTotal += newPrice;
            }
            if (newPrice != lastPrice) {
                quoteBaseGrandTotal += (newPrice-lastPrice);
                lastPrice = newPrice;
            }
        }
        checkQuoteBaseGrandTotal = quoteBaseGrandTotal;
        updateTotalView();
        return false;
    }

    function wpAfterUpdatePayment()
    {
        var needUpdated = <?php echo (int)Mage::helper('onepagecheckout')->getConfigParam('general/update_total_after_payment'); ?>;
        if (needUpdated) updateTotalView();
        return false;
    }

    function setDiscount(isRemove)
    {
        if (isRemove)
        {
            $('coupon_code').removeClassName('required-entry');
            $('remove-coupone').value = "1";
        }
        else
        {
            $('coupon_code').addClassName('required-entry');
            $('remove-coupone').value = "0";
        }

        var validator = new Validation('discount-coupon-form');
        if (!validator.validate()) return;

        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'discount_coupon')) ?>';
        checkout.updateInfo(url);
    }

    function bindUpdateBillingMethods()
    {
        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>';
        checkout.updateInfo(url);
    }

    function bindUpdateShippingMethods()
    {
        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>';
        checkout.updateInfo(url);
    }

    function updateTotalView()
    {
        var url = '<?php echo $this->getUrl('checkout/onepage/ajaxUpdate', array('type' => 'all_methods')) ?>';
        checkout.updateInfo(url);
    }

    function toggleShipping(isChecked)
    {
        if (isChecked)
        {
            $('shipping:same_as_billing').checked = true;
            $('checkoutSteps').addClassName('shipping_as_billing');
            Element.hide('opc-shipping');
        }
        else
        {
            $('shipping:same_as_billing').checked = false;
            $('checkoutSteps').removeClassName('shipping_as_billing');
            wpClearShippingForm();
            Element.show('opc-shipping');
        }
    }

    function wpClearShippingForm()
    {
        var needClearShippingForm = <?php echo (int)Mage::helper('onepagecheckout')->getConfigParam('general/clear_different_shipping'); ?>;
        if (!needClearShippingForm) return;

        var lst = $('co-shipping-form').getElements();
        lst.each(function(item) {
            if (item.type == 'hidden') return;
            if (item.hasClassName('skip-clear')) return;
            item.clear()
        });
    }

    function toggleRegister(isChecked)
    {
        if (isChecked)
        {
            checkout.method = 'register';
            new Ajax.Request(
                checkout.saveMethodUrl,
                {method: 'post', onFailure: checkout.ajaxFailure.bind(checkout), parameters: {method:'register'}}
            );
            if ($('login:register')) $('login:register').checked = true;
            Element.show('register-customer-password');
        }
        else
        {
            checkout.method = 'guest';
            new Ajax.Request(
                checkout.saveMethodUrl,
                {method: 'post', onFailure: checkout.ajaxFailure.bind(checkout), parameters: {method:'guest'}}
            );
            if ($('login:register')) $('login:register').checked = false;
            Element.hide('register-customer-password');
        }
    }

    <?php if($this->getQuote()->getCheckoutMethod()==Mage_Checkout_Model_Type_Onepage::METHOD_REGISTER || !$this->getQuote()->isAllowedGuestCheckout()): ?>
    toggleRegister(true);
    <?php endif ?>
    <?php if($this->getQuote()->getCheckoutMethod()==Mage_Checkout_Model_Type_Onepage::METHOD_GUEST && $this->getQuote()->isAllowedGuestCheckout()): ?>
    toggleRegister(false);
    <?php endif; ?>

    payment.initWhatIsCvvListeners();
//]]>
</script>
